// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"GeekProject/newGeekProject/day2/webook/internal/repository"
	"GeekProject/newGeekProject/day2/webook/internal/repository/cache"
	"GeekProject/newGeekProject/day2/webook/internal/repository/dao"
	"GeekProject/newGeekProject/day2/webook/internal/service"
	"GeekProject/newGeekProject/day2/webook/internal/web"
	"GeekProject/newGeekProject/day2/webook/internal/web/ijwt"
	"GeekProject/newGeekProject/day2/webook/ioc"
	"github.com/gin-gonic/gin"
)

// Injectors from wire.go:

func InitWebServer() *gin.Engine {
	cmdable := ioc.InitRedis()
	handlerJWTInterface := ijwt.NewRedisJwtHandler(cmdable)
	v := ioc.InitMiddlewares(cmdable, handlerJWTInterface)
	db := ioc.InitDB()
	userDaoInterface := dao.NewUserDao(db)
	userCache := cache.NewUserCache(cmdable)
	userRepositoryInterface := repository.NewUserRepository(userDaoInterface, userCache)
	userServiceInterface := service.NewUserService(userRepositoryInterface)
	codeCache := cache.NewCodeCache(cmdable)
	codeRepositoryInterface := repository.NewCodeRepository(codeCache)
	serviceSmsInterface := ioc.InitSMSService()
	codeServiceInterface := service.NewCodeService(codeRepositoryInterface, serviceSmsInterface)
	userHandler := web.NewUserHandler(userServiceInterface, codeServiceInterface, handlerJWTInterface)
	serviceWechatInterface := ioc.InitOAuth2WechatService()
	oAuth2WechatHandler := web.NewOAuth2WechatHandler(serviceWechatInterface, userServiceInterface, handlerJWTInterface)
	engine := ioc.InitGin(v, userHandler, oAuth2WechatHandler)
	return engine
}
